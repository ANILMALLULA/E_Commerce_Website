{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sai kiran\\\\Desktop\\\\Only React\\\\react_tdd\\\\E_Commerce_Website\\\\src\\\\components\\\\AllProductsSection\\\\index.js\";\nimport { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport ProductCard from \"../ProductCard\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AllProductsSection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      productsList: [],\n      loading: false\n    };\n\n    this.getproducts = async () => {\n      this.setState({\n        loading: true\n      });\n      let url = \"https://apis.ccbp.in/products\";\n      let jwtToken = Cookies.get(\"jwt_token\");\n      let options = {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      };\n      let response = await fetch(url, options);\n\n      if (response.ok === true) {\n        const fetchedData = await response.json();\n        this.setState({\n          loading: false\n        });\n        const updatedData = fetchedData.products.map(product => ({\n          title: product.title,\n          brand: product.brand,\n          price: product.price,\n          id: product.id,\n          imageUrl: product.image_url,\n          rating: product.rating\n        }));\n        this.setState({\n          productsList: updatedData\n        });\n      }\n    };\n\n    this.renderProductsList = () => {\n      const {\n        productsList\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"products-list-heading\",\n          children: \"All Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"products-list\",\n          children: productsList.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n            productData: product\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.getproducts();\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this) : this.renderProductsList()\n    }, void 0, false);\n  }\n\n}\n\nexport default AllProductsSection;","map":{"version":3,"sources":["C:/Users/sai kiran/Desktop/Only React/react_tdd/E_Commerce_Website/src/components/AllProductsSection/index.js"],"names":["Component","Cookies","ProductCard","AllProductsSection","state","productsList","loading","getproducts","setState","url","jwtToken","get","options","method","headers","Authorization","response","fetch","ok","fetchedData","json","updatedData","products","map","product","title","brand","price","id","imageUrl","image_url","rating","renderProductsList","componentDidMount","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAO,aAAP;;;;AAEA,MAAMC,kBAAN,SAAiCH,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCI,KADyC,GACjC;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,OAAO,EAAE;AAFH,KADiC;;AAAA,SAUzCC,WAVyC,GAU3B,YAAY;AACxB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,UAAIG,GAAG,GAAG,+BAAV;AACA,UAAIC,QAAQ,GAAGT,OAAO,CAACU,GAAR,CAAY,WAAZ,CAAf;AACA,UAAIC,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAE,KADI;AAEZC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASL,QAAS;AAD3B;AAFG,OAAd;AAOA,UAAIM,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAD,EAAMG,OAAN,CAA1B;;AAEA,UAAII,QAAQ,CAACE,EAAT,KAAgB,IAApB,EAA0B;AACxB,cAAMC,WAAW,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA1B;AACA,aAAKZ,QAAL,CAAc;AAAEF,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,cAAMe,WAAW,GAAGF,WAAW,CAACG,QAAZ,CAAqBC,GAArB,CAA0BC,OAAD,KAAc;AACzDC,UAAAA,KAAK,EAAED,OAAO,CAACC,KAD0C;AAEzDC,UAAAA,KAAK,EAAEF,OAAO,CAACE,KAF0C;AAGzDC,UAAAA,KAAK,EAAEH,OAAO,CAACG,KAH0C;AAIzDC,UAAAA,EAAE,EAAEJ,OAAO,CAACI,EAJ6C;AAKzDC,UAAAA,QAAQ,EAAEL,OAAO,CAACM,SALuC;AAMzDC,UAAAA,MAAM,EAAEP,OAAO,CAACO;AANyC,SAAd,CAAzB,CAApB;AAQA,aAAKvB,QAAL,CAAc;AACZH,UAAAA,YAAY,EAAEgB;AADF,SAAd;AAGD;AACF,KAtCwC;;AAAA,SAwCzCW,kBAxCyC,GAwCpB,MAAM;AACzB,YAAM;AAAE3B,QAAAA;AAAF,UAAmB,KAAKD,KAA9B;AACA,0BACE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBACGC,YAAY,CAACkB,GAAb,CAAkBC,OAAD,iBAChB,QAAC,WAAD;AAAa,YAAA,WAAW,EAAEA;AAA1B,aAAwCA,OAAO,CAACI,EAAhD;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KApDwC;AAAA;;AAMzCK,EAAAA,iBAAiB,GAAG;AAClB,SAAK1B,WAAL;AACD;;AA8CD2B,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE5B,MAAAA;AAAF,QAAc,KAAKF,KAAzB;AAEA,wBAAO;AAAA,gBAAGE,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAAsB,KAAK0B,kBAAL;AAAhC,qBAAP;AACD;;AA1DwC;;AA6D3C,eAAe7B,kBAAf","sourcesContent":["import { Component } from \"react\";\nimport Cookies from \"js-cookie\";\n\nimport ProductCard from \"../ProductCard\";\nimport \"./index.css\";\n\nclass AllProductsSection extends Component {\n  state = {\n    productsList: [],\n    loading: false,\n  };\n\n  componentDidMount() {\n    this.getproducts();\n  }\n\n  getproducts = async () => {\n    this.setState({ loading: true });\n    let url = \"https://apis.ccbp.in/products\";\n    let jwtToken = Cookies.get(\"jwt_token\");\n    let options = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    };\n\n    let response = await fetch(url, options);\n\n    if (response.ok === true) {\n      const fetchedData = await response.json();\n      this.setState({ loading: false });\n      const updatedData = fetchedData.products.map((product) => ({\n        title: product.title,\n        brand: product.brand,\n        price: product.price,\n        id: product.id,\n        imageUrl: product.image_url,\n        rating: product.rating,\n      }));\n      this.setState({\n        productsList: updatedData,\n      });\n    }\n  };\n\n  renderProductsList = () => {\n    const { productsList } = this.state;\n    return (\n      <div>\n        <h1 className=\"products-list-heading\">All Products</h1>\n        <ul className=\"products-list\">\n          {productsList.map((product) => (\n            <ProductCard productData={product} key={product.id} />\n          ))}\n        </ul>\n      </div>\n    );\n  };\n\n  render() {\n    const { loading } = this.state;\n\n    return <>{loading ? <h1>Loading</h1> : this.renderProductsList()}</>;\n  }\n}\n\nexport default AllProductsSection;\n"]},"metadata":{},"sourceType":"module"}